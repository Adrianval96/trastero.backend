steps:
  - id: 'Build Docker Image'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}', '.']

  - id: "Push Docker image"
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}']

  - id: "Apply migrations"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
        "-e",
        "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]

  - id: "Collect static files"
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i",
        "gcr.io/$PROJECT_ID/${_SERVICE_NAME}",
        "-s",
        "${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
        "-e",
        "SETTINGS_NAME=${_SECRET_SETTINGS_NAME}",
        "--",
        "python",
        "manage.py",
        "collectstatic",
        "--verbosity",
        "2",
        "--no-input",
      ]

  # Deploy the Docker image to Cloud Run
  - id: 'Deploy to Cloud Run'
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'trastero-backend'
      - '--image=gcr.io/$PROJECT_ID/${_SERVICE_NAME}'
      - '--platform=managed'
      - '--region=europe-west1'
      - '--add-cloudsql-instances=${PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}'
      - '--allow-unauthenticated'

images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}'

substitutions:
  _INSTANCE_NAME: trastero-postgres
  _REGION: europe-west1
  _SERVICE_NAME: trastero-backend
  _SECRET_SETTINGS_NAME: django_settings
